pipeline {
     agent any 
        
        
        
        environment {
        bucket = "confluence-assessments-task-4-enquizit-2022"          //artifact deployment S3 buckets 
        region = "us-east-1"                     //artifact deployment bucket region 
        region1 = "us-east-2"                    //artifact upload bucket region 
        aws_credential = "AWSReservedSSO_AdministratorAccess_564bcbbbca5e5655/rzdin@enquizit.com" //aws credentials 
        application_name = "Nodejs" 
        DOCKERHUB_CREDENTIALS = "rzdin-dockerhub"
        
           
        
       
       
    }
       tools { 
                     maven 'maven' 
                     jdk 'JAVA_HOME' 
   }
    stages {
        stage('Build') {
             
            steps {
                sh 'mvn -B -DskipTests clean package -D v=${BUILD_NUMBER}'
            }
             post {
                always {
                    emailext attachLog: true, body: 'This is an extented email test ', subject: 'This is an extented email test ', to: 'rzdin@enquizit.com'
                }
            }
        }
        stage('Test') {
              
            steps {
                sh 'mvn test'
            }
            post {
                always {
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }

          stage('docker image build/push') {
                when {
                    expression {
                         currentBuild.result == null || currentBuild.result == 'SUCCESS' 
              }
        }
             
            steps {
            
               script{
                 
                   docker.withRegistry( 'https://index.docker.io/v1/',  DOCKERHUB_CREDENTIALS ) {
                   def app = docker.build("rzdin/my-java-app:${BUILD_NUMBER}", '.').push()
               }           
           }
        }
     }
         stage('S3 Prod Env'){ //This stage deploy the artifacts from the copy build artifacts stage to se dployement bucket 
           
            steps{
                 sh'''#!/bin/bash
                    mv ./target/my-app-1.0-${BUILD_NUMBER}-SNAPSHOT.jar  .
                 '''
                   withAWS(credentials: "${aws_credential}", region: "${region}"){
                     
                        s3Upload(file:"my-app-1.0-${BUILD_NUMBER}-SNAPSHOT.jar", bucket:"${bucket}")
        }
     }
  }            
}
}
