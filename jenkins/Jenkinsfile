pipeline {
     agent any 
        
        
        
        environment {
        bucket = "sam-jenkins-demo-us-west-2-rana-ziauddin"          //artifact deployment S3 bucket 
        bucket1 = "sam-jenkins-demo-us-east-2-ranaziauddin"         //artifact upload s3 bucket 
        region = "us-east-1"                     //artifact deployment bucket region 
        region1 = "us-east-2"                    //artifact upload bucket region 
        aws_credential = "AWSReservedSSO_AdministratorAccess_564bcbbbca5e5655/rzdin@enquizit.com" //aws credentials 
        application_name = "Nodejs"    
        
           
        
       
       
    }
    stages {
        stage('Build') {
              tools { 
                     maven 'maven' 
                     jdk 'JAVA_HOME' 
               }
            steps {
                sh 'mvn -B -DskipTests clean package'
            }
        }
        stage('Test') {
              tools { 
                     maven 'maven' 
                     jdk 'JAVA_HOME' 
               }
            steps {
                sh 'mvn test'
            }
            post {
                always {
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }
        stage('Deliver') {
            steps { 
                 sh'''#!/bin/bash 
                    #!/bin/bash 

                              echo 'The following Maven command installs your Maven-built Java application'
                              echo 'into the local Maven repository, which will ultimately be stored in'
                              echo 'Jenkins''s local Maven repository (and the "maven-repository" Docker data'
                              echo 'volume).'
                              set -x
                              mvn jar:jar install:install help:evaluate -Dexpression=project.name
                              set +x

                              echo 'The following complex command extracts the value of the <name/> element'
                              echo 'within <project/> of your Java/Maven project''s "pom.xml" file.'
                              set -x
                              NAME=`mvn help:evaluate -Dexpression=project.name | grep "^[^\[]"`
                              set +x

                              echo 'The following complex command behaves similarly to the previous one but'
                              echo 'extracts the value of the <version/> element within <project/> instead.'
                              set -x
                              VERSION=`mvn help:evaluate -Dexpression=project.version | grep "^[\^\[]"`
                              set +x

                              echo 'The following command runs and outputs the execution of your Java'
                              echo 'application (which Jenkins built using Maven) to the Jenkins UI.'
                              set -x
                              java -jar target/${NAME}-${VERSION}.jar
                
                 '''
               
            }
        }
    }
}
